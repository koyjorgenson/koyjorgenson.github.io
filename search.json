[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/introduction/index.html",
    "href": "posts/introduction/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "Hello my name is Koy Jorgenson and I love what I love doing. Blob"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "latest posts",
    "section": "",
    "text": "Are the New York Yankees still the most winning Dynasty?\n\n\n\n\n\n\n\nsports\n\n\ndata\n\n\nMLB\n\n\n\n\n\n\n\n\n\n\n\nApr 12, 2024\n\n\nKoy Jorgenson\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/mlb-greatest-generation-team/index.html",
    "href": "posts/mlb-greatest-generation-team/index.html",
    "title": "Are the New York Yankees still the most winning Dynasty?",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggrepel)\nlibrary(gt)\n\n\nWarning: package 'gt' was built under R version 4.3.3\n\n\nCode\nlibrary(wehoop)\n\n\n\n\nCode\nteamwins &lt;- read_csv(\"teamwins.csv\")\n\n\nRows: 30 Columns: 45\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): Year\ndbl (44): 2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015, 2014, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nLongData &lt;- read_csv(\"teamwinslong.csv\")\n\n\nRows: 780 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Team\ndbl (2): Year, Wins\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nSelectedData &lt;- teamwins |&gt;\n select(Year, \"2023\", \"2022\", \"2021\", \"2020\", \"2019\", \"2018\", \"2017\", \"2016\", \"2015\", \"2014\", \"2013\", \"2012\", \"2011\", \"2010\", \"2009\", \"2008\", \"2007\", \"2006\", \"2005\", \"2004\", \"2003\", \"2002\", \"2001\", \"2000\"\n )\n\n\n\n\nCode\nWins &lt;- SelectedData |&gt;\n select(Year, \"2023\", \"2022\", \"2021\", \"2020\", \"2019\", \"2018\", \"2017\", \"2016\", \"2015\", \"2014\", \"2013\", \"2012\", \"2011\", \"2010\", \"2009\", \"2008\", \"2007\", \"2006\", \"2005\", \"2004\", \"2003\", \"2002\", \"2001\", \"2000\"\n  ) |&gt;\n  mutate(\n    TotalWins = `2023`+`2022`+`2021`+`2020`+`2019`+`2018`+`2017`+`2016`+`2015`+`2014`+`2013`+`2012`+`2011`+`2010`+`2009`+`2008`+`2007`+`2006`+`2005`+`2004`+`2003`+`2002`+`2001`+`2000`\n  ) |&gt;\n  arrange(desc(TotalWins))\n\n\n\n\nCode\nNYY &lt;- Wins |&gt;\n  filter(\n    Year == \"NYY\"\n  )\nLAD &lt;- Wins |&gt;\n  filter(\n    Year == \"LAD\"\n  )\nSTL &lt;- Wins |&gt;\n  filter(\n    Year == \"STL\"\n  )\nBOS &lt;- Wins |&gt;\n  filter(\n    Year == \"BOS\"\n  )\nATL &lt;- Wins |&gt;\n  filter(\n    Year == \"ATL\"\n  )\nSFG &lt;- Wins |&gt;\n  filter(\n    Year == \"SFG\"\n  )\nLAA &lt;- Wins |&gt;\n  filter(\n    Year == \"LAA\"\n  )\nOAK &lt;- Wins |&gt;\n  filter(\n    Year == \"OAK\"\n  )\nCLE &lt;- Wins |&gt;\n  filter(\n    Year == \"CLE\"\n  )\nHOU &lt;- Wins |&gt;\n  filter(\n    Year == \"HOU\"\n  )\nPHI &lt;- Wins |&gt;\n  filter(\n    Year == \"PHI\"\n  )\nTOR &lt;- Wins |&gt;\n  filter(\n    Year == \"TOR\"\n  )\nMIN &lt;- Wins |&gt;\n  filter(\n    Year == \"MIN\"\n  )\nSEA &lt;- Wins |&gt;\n  filter(\n    Year == \"SEA\"\n  )\nNYM &lt;- Wins |&gt;\n  filter(\n    Year == \"NYM\"\n  )\nCHC &lt;- Wins |&gt;\n  filter(\n    Year == \"CHC\"\n  )\nTBR &lt;- Wins |&gt;\n  filter(\n    Year == \"TBR\"\n  )\nCHW &lt;- Wins |&gt;\n  filter(\n    Year == \"CHW\"\n  )\nMIL &lt;- Wins |&gt;\n  filter(\n    Year == \"MIL\"\n  )\nTEX &lt;- Wins |&gt;\n  filter(\n    Year == \"TEX\"\n  )\nARI &lt;- Wins |&gt;\n  filter(\n    Year == \"ARI\"\n  )\nWSN &lt;- Wins |&gt;\n  filter(\n    Year == \"WSN\"\n  )\nSDP &lt;- Wins |&gt;\n  filter(\n    Year == \"SDP\"\n  )\nCIN &lt;- Wins |&gt;\n  filter(\n    Year == \"CIN\"\n  )\nMIA &lt;- Wins |&gt;\n  filter(\n    Year == \"MIA\"\n  )\nDET &lt;- Wins |&gt;\n  filter(\n    Year == \"DET\"\n  )\nCOL &lt;- Wins |&gt;\n  filter(\n    Year == \"COL\"\n  )\nBAL &lt;- Wins |&gt;\n  filter(\n    Year == \"BAL\"\n  )\nPIT &lt;- Wins |&gt;\n  filter(\n    Year == \"PIT\"\n  )\nKCR &lt;- Wins |&gt;\n  filter(\n    Year == \"KCR\"\n  )\nggplot() + \n  geom_bar(data=Wins, aes(x=reorder(Year, TotalWins), weight=TotalWins)) +\n  geom_bar(data=NYY, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#0C2340\") +\n   geom_bar(data=LAD, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#005A9C\") +\n  geom_bar(data=STL, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#C41E3A\") +\n  geom_bar(data=BOS, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#BD3039\") +\n  geom_bar(data=ATL, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#EAAA00\") +\n  geom_bar(data=SFG, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#FD5A1E\") +\n   geom_bar(data=LAA, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#862633\") +\n  geom_bar(data=OAK, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#003831\") +\n  geom_bar(data=CLE, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#00385D\") +\n  geom_bar(data=HOU, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#F4911E\") +\n  geom_bar(data=PHI, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#E81828\") +\n   geom_bar(data=TOR, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#134A8E\") +\n  geom_bar(data=MIN, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#D31145\") +\n  geom_bar(data=SEA, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#005C5C\") +\n  geom_bar(data=NYM, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#FF5910\") +\n  geom_bar(data=CHC, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#0E3386\") +\n   geom_bar(data=TBR, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#0E3386\") +\n  geom_bar(data=CHW, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#27251F\") +\n  geom_bar(data=MIL, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#FFC52F\") +\n  geom_bar(data=TEX, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#003278\") +\n  geom_bar(data=ARI, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#E3D4AD\") +\n   geom_bar(data=WSN, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#FFFFFF\") +\n  geom_bar(data=SDP, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#2F241D\") +\n  geom_bar(data=CIN, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#C6011F\") +\n  geom_bar(data=MIA, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#41748D\") +\n  geom_bar(data=DET, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#FA4616\") +\n   geom_bar(data=COL, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#333366\") +\n  geom_bar(data=BAL, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#006747\") +\n  geom_bar(data=PIT, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#FDB827\") +\n  geom_bar(data=KCR, aes(x=reorder(Year, TotalWins), weight=TotalWins), fill=\"#004687\") +\n  coord_flip() +\n  labs(\n    x=\"Every MLB Franchise\", \n    y=\"Each Franchises Total Wins From 2000-2023\", \n    title=\"The Best MLB Franchise Of The 2000's\", \n    subtitle=\"The New York Yankees and the Los Angeles Dodgers lead the league.\", \n    caption=\"Source: Baseball Reference | Koy Jorgenson\"\n    )\n\n\n\n\n\n\n\nCode\nAverageWinsPer &lt;- Wins|&gt;\n  mutate(\n    AverageWinsPerSeason = TotalWins/23\n  )\n\n\n\n\nCode\nEachFranchisesWins &lt;- AverageWinsPer |&gt;\n  select(Year, TotalWins, AverageWinsPerSeason)\n\n\n\n\nCode\nEachFranchisesWins |&gt;\n  gt() |&gt;\n cols_label(\n    Year = \"Franchise\",\n    TotalWins = \"TotalWins\",\n    AverageWinsPerSeason = \"AverageWinsPerSeason\"\n )\n\n\n\n\n\n\n  \n    \n      Franchise\n      TotalWins\n      AverageWinsPerSeason\n    \n  \n  \n    NYY\n2192\n95.30435\n    LAD\n2141\n93.08696\n    STL\n2096\n91.13043\n    BOS\n2064\n89.73913\n    ATL\n2063\n89.69565\n    SFG\n1972\n85.73913\n    LAA\n1971\n85.69565\n    OAK\n1961\n85.26087\n    CLE\n1954\n84.95652\n    HOU\n1941\n84.39130\n    PHI\n1924\n83.65217\n    TOR\n1903\n82.73913\n    MIN\n1902\n82.69565\n    SEA\n1890\n82.17391\n    NYM\n1887\n82.04348\n    CHC\n1886\n82.00000\n    TBR\n1879\n81.69565\n    CHW\n1870\n81.30435\n    MIL\n1867\n81.17391\n    TEX\n1859\n80.82609\n    ARI\n1833\n79.69565\n    WSN\n1807\n78.56522\n    SDP\n1795\n78.04348\n    CIN\n1784\n77.56522\n    MIA\n1769\n76.91304\n    DET\n1755\n76.30435\n    COL\n1748\n76.00000\n    BAL\n1714\n74.52174\n    PIT\n1691\n73.52174\n    KCR\n1651\n71.78261\n  \n  \n  \n\n\n\n\n\n\nCode\nMoreThan100 &lt;- LongData |&gt;\n  filter(Wins &gt;= 100) |&gt;\n  arrange(desc(Wins))\n\n\n\n\nCode\nggplot() + geom_point(data=MoreThan100, aes(x=Year, y=Wins))"
  }
]